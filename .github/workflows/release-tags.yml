# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release tagged build

on:
  workflow_call:
    secrets:
      MAVEN_USER:
        required: false
      MAVEN_PASSWORD:
        required: false
      CURSEFORGE_TOKEN:
        required: false
      MODRINTH_TOKEN:
        required: false
    inputs:
      workspace:
        description: 'setupCIWorkspace/setupDecompWorkspace'
        required: false
        default: "setupCIWorkspace"
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout mod repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 32

      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup the workspace
        run: ./gradlew --info --stacktrace ${{ inputs.workspace }}

      - name: Build the mod
        run: ./gradlew --info --stacktrace build

      # Continue on error in the following steps to make sure releases still get made even if one of the methods fails

      - name: Delete old release if it already exists
        run: gh release delete --yes "${RELEASE_VERSION}"
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release under current tag
        run: gh release create "${RELEASE_VERSION}" --generate-notes ./build/libs/*.jar
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save changelog
        run: gh release view --json body --jq .body > CHANGELOG.md
        continue-on-error: true

      - name: Publish to Maven, Modrinth and CurseForge
        run: ./gradlew --info --stacktrace build publish
        continue-on-error: true
        env:
          MAVEN_USER: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
        if: ${{ env.MAVEN_USER != '' }}
